version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: app-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./infra/db/init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: app-api
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      PORT: ${PORT}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PORT:-8080}:8080"
    restart: unless-stopped

  web:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_URL: "http://localhost:${PORT:-8080}"
    container_name: app-web
    depends_on:
      - backend
    ports:
      - "3000:80"
    restart: unless-stopped

volumes:
  db-data:
